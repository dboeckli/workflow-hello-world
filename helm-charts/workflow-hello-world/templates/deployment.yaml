apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "application-template.fullname" . }}
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "application-template.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "application-template.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "application-template.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: wait-for-ldap
          image: busybox:1.37.0
          command: [ 'sh', '-c', 'until nc -z {{ .Release.Name }}-workflow-hello-world-ldap.{{ .Release.Namespace }}.svc.cluster.local {{ .Values.ldap.port }}; do echo "[busybox: wait-for-ldap] waiting for ldap"; sleep 2; done; echo "[busybox: wait-for-ldap] ldap is available"' ]
        - name: wait-for-apifirst-server-jpa
          image: busybox:1.37.0
          command: [ 'sh', '-c', 'until nc -z {{ .Release.Name }}-apifirst-server-jpa.{{ .Release.Namespace }}.svc.cluster.local {{ .Values.apifirstServerJpa.port }}; do echo "[busybox: wait-for-apifirst-server-jpa] waiting for apifirst-server-jpa"; sleep 2; done; echo "[busybox: wait-for-apifirst-server-jpa] apifirst-server-jpa is available"' ]

      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: IfNotPresent
          env:
            - name: JAVA_TIMEZONE
              value: "{{ .Values.global.timezone }}"

            - name: LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_LDAP_CORE_LDAPTEMPLATE
              value: "DEBUG"

            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.spring.profiles.active }}
            - name: CAMUNDA_LDAP_PLUGIN_URL
              value: "{{ .Values.ldap.protocol }}://{{ .Release.Name }}-workflow-hello-world-ldap.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.ldap.port }}"
            - name: SPRING_LDAP_URL
              value: "{{ .Values.ldap.protocol }}://{{ .Release.Name }}-workflow-hello-world-ldap.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.ldap.port }}"
            - name: APPLICATION_APIFIRST_SERVER_JPA_HOST
              value: "{{ .Release.Name }}-apifirst-server-jpa.{{ .Release.Namespace }}.svc.cluster.local"
            - name: CAMUNDA_BPM_CLIENT_BASE_URL
              value: "http://localhost:{{ .Values.service.port }}/bpm/engine-rest"
            #- name: CAMUNDA_BPM_CLIENT_BASE_URL
            #  value: "http://{{ .Release.Name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.service.port }}/bpm/engine-rest"
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          startupProbe:
            httpGet:
              path: /bpm/actuator/health/readiness
              port: http
            initialDelaySeconds: {{ .Values.probes.startup.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.startup.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.startup.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.startup.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /bpm/actuator/health/readiness
              port: http
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
          livenessProbe:
            httpGet:
              path: /bpm/actuator/health/liveness
              port: http
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
          volumeMounts:
            - mountPath: "{{ .Values.global.timezonePath }}"
              name: time
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: time
          hostPath:
            path: {{ .Values.global.timezonePath }}
            type: ""
