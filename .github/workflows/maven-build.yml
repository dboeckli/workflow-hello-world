name: Maven Build

on:
  push:
    branches:
      - main
      - feature/**
  workflow_dispatch:

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      BRANCH_MAVEN_VERSION: ${{ steps.set_version.outputs.BRANCH_MAVEN_VERSION }}
      GIT_BRANCH: ${{ steps.set_version.outputs.GIT_BRANCH }}
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up java 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'
      - name: Cache maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Set Maven Versions
        id: set_version
        run: './.github/scripts/set_maven_version.sh'
  analyze:
    name: Build and Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up java 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Setup maven settings.xml
        uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: >
            [
              {
                "id": "central",
                "username": "${{ vars.ARTIFACTORY_CI_SWP_USERNAME }}",
                "password": "${{ secrets.ARTIFACTORY_CI_SWP_TOKEN }}"
              },
              {
                "id": "snapshots",
                "username": "${{ vars.ARTIFACTORY_CI_SWP_USERNAME }}",
                "password": "${{ secrets.ARTIFACTORY_CI_SWP_TOKEN }}"
              }
            ]
      - name: Build and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ch.swissperform:template-java-maven
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [ setup ]
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up java 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'
      - name: Cache maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Setup maven settings.xml
        uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: >
            [
              {
                "id": "central",
                "username": "${{ vars.ARTIFACTORY_CI_SWP_USERNAME }}",
                "password": "${{ secrets.ARTIFACTORY_CI_SWP_TOKEN }}"
              },
              {
                "id": "snapshots",
                "username": "${{ vars.ARTIFACTORY_CI_SWP_USERNAME }}",
                "password": "${{ secrets.ARTIFACTORY_CI_SWP_TOKEN }}"
              }
            ]
      - name: Build
        run: |
          BRANCH=$(git rev-parse --abbrev-ref HEAD)
          if [[ $BRANCH == "main" ]];
          then
            echo "Releasing main branch, resuming"
          else
            mvn -B versions:set -DnewVersion="${{ needs.setup.outputs.BRANCH_MAVEN_VERSION }}"
          fi
          mvn -B deploy