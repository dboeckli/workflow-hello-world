name: Maven Release

on:
  workflow_dispatch:

permissions: write-all

jobs:
  check-branch:
    name: Check Branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check for main
        run: |
          BRANCH=$(git rev-parse --abbrev-ref HEAD)
          if [[ $BRANCH == "main" ]];
          then
            echo "Releasing main branch, resuming"
          else
            echo "Releasing only allowed for branch 'main'"
            exit 1
          fi
  check-maven-version:
    name: Check maven Version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check version
        run: |
          MAVEN_VERSION=$( mvn help:evaluate -P '!artifactory' -Dexpression=project.version -q -DforceStdout )
          if [[ "$MAVEN_VERSION" == *SNAPSHOT ]];
          then
            echo "Maven version ends with SNAPSHOT"
          else
            echo "Maven version must be a SNAPSHOT version to release"
            exit 1
          fi
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ check-branch ]
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.SWP_CI_TOKEN }}
          fetch-depth: 0
      - name: Set up java 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'
      - name: Cache maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Setup git user
        run: |
          git config --global user.email "${{ vars.SWP_CI_USER_EMAIL }}"
          git config --global user.name "${{ vars.SWP_CI_USER }}"
      - name: Setup maven settings.xml
        uses: s4u/maven-settings-action@v3.0.0
        with:
          servers: >
            [
              {
                "id": "central",
                "username": "${{ vars.ARTIFACTORY_CI_SWP_USERNAME }}",
                "password": "${{ secrets.ARTIFACTORY_CI_SWP_TOKEN }}"
              },
              {
                "id": "snapshots",
                "username": "${{ vars.ARTIFACTORY_CI_SWP_USERNAME }}",
                "password": "${{ secrets.ARTIFACTORY_CI_SWP_TOKEN }}"
              }
            ]
      - name: Release
        run: |
          mvn -B release:prepare release:perform -Dusername=${{ vars.SWP_CI_USER_EMAIL }} -Dpassword=${{ secrets.SWP_CI_TOKEN }}
